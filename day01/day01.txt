
 CSS (꾸며주는 언어)
    (Cascading Styled Sheets)

        HTML 문서에 style 속성을 추가하여 시각적으로 꾸며주는 역할을 하는 style sheets
        디자인 부분을 담당

-----------------------------------------------------------------------------------

 CSS 스타일링 기법 (적용법)

    1. 내부스타일링
        - HTML 문서의 <head> 태그 안에 <style> 태그를 활용해서 적용
          한 페이지의 스타일을 한번에 관리

          ex)
            <html>
                    <head>
                        <style>
                            ..CSS
                        </style>
                    </head>
                    <body></body>
            </html>
    
    2. 외부스타일링
            현재 해당 웹 사이트 전체(다른 html에도 적용이 가능, 재사용)
            <head>태그 안에 <link> 요소를 사용해서 외부에 만들어준 
            css 문법이 담긴 파일(확장명 .css)을 연결하여 적용하는 방법

            css (folder)
                style.css (file)

            <head>           "css파일의 경로"
                <link href="./css/style.css" rel="stylesheet" />
            </head>

    3. 인라인스타일링
            HTML 태그 안에 직접적으로 style 속성을 이용하여 적용
            ex)
                <p style="...CSS"></p>

            어떠한 css 보다도 우선순위가 가장 높다


    *   내부스타일(한 html 문서에 작성)
        외부스타일(html 외부에 작성)
        인라인(html의 요소 안에 직접적으로 작성)

-------------------------------------------------------------------------------

    CSS의 선택자

        CSS 문법

            선택자
            ------  {
                .. CSS
            }


        1) 전체 선택자
            스타일을 모든 요소에 적용
            단, 전체 선택자는 다른 선택자보다 우선 순위가 낮기 때문에
            그 이후 선언되는 CSS가 있다면 덮어 씌어진다.

            ex)
                * {
                    CSS 속성: 속성 값;
                }

                reset.css, font
                (기존 요소의 css 속성을 초기화, 전체 폰트를 변경)

                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box
                    font-family: 'Noto Sans'
                }


        2) 요소 선택자
            특정 요소(태그명)를 선택하여 모든 해당 요소에 CSS를 적용

            ex) p {
                    CSS 속성: 속성 값;
                }

        * 3) id, class 선택자 

            태그(요소)의 id와 class 속성에 관한 이야기

                <p id= "" >
                <p class="" >

            id, class 속성은 어디에 사용?
                고유값, 그룹화
                해당 요소를 그룹으로 묶어주거나 특정 요소만 구분하기 위하여 사용
                요소에 이름을 지어주는 행위

            id 속성은
                1) 그룹을 묶어줄 때 사용 ? (x)
                2) 특정 요소를 구분하기위해 사용 ? (o)

                한 .html 파일안에
                단 하나의 요소에만 적용이 가능

            class 속성은
                1) 그룹을 묶어줄 때 사용 (o)
                
                한 .html 파일안에
                복수의 요소에 적용이 가능

            이를 이용하여 id와 class 속성을 css 선택자로 적용하면
            내가 원하는 태그를 선택하여 css 속성을 부여할 수 있고
            한번의 css속성의 부여를 통해 여러 요소에 css적용 가능

                => 내가 원하는 요소에 원하는 css 적용 가능

            (1) id 선택자
                ex) 
                    #아이디명 {
                        CSS 속성명: 속성값 ;
                    }
                
                <div id="nav"> </div>

                #nav {
                    ...
                }

            (2) class 선택자
                ex) 
                    .클래스명{
                         CSS 속성명: 속성값 ;
                    }

                <div class="menu-item"> </div>
                <li class="menu-item"> </li>
                <p class="menu-item"> </p>

                    .menu-item{
                        ....
                    }


            * id와 class 선택자의 차이점은
                id 선택자가 우선순위가 더 높다는 것
                따라서 css의 선택자로는 class를 많이 사용

 -------------------------------------------------------------------------------

        4) 그룹 선택자

            선택자1, 선택자2, ... {
                ...CSS 문법
            }

            ex)
                p, div {
                    ... CSS 문법
                }

                .active, #content{
                    ... CSS 문법
                }

                장점 : 동일한 속성을 부여해야하는 경우 css를 추가로 작성하지 않고
                       재사용가능하다


        5) 가족 선택자

            * CSS의 가족

                HTML 요소의 가족관계

                    조상 : 상위의 모든 요소
                    부모 : 바로 위 상위 요소

                    자손 : 하위의 모든 요소
                    자식 : 바로 아래 하위 요소

                    형제 : 이웃한 요소

                    ex)

                    <div> -- 조상요소
                        <div> -- 조상요소, 부모요소
                            <div> -- 기준요소
                                <div> --자식요소, 자손요소
                                    <div></div> --자손요소
                                    <div></div> --자손요소
                                </div>
                            </div>
                            <div></div> --형제요소
                            <div></div> --형제요소
                        </div>
                        <div></div> --조상요소
                        <div></div> --조상요소
                    </div>

                        <div> --- 부모요소(조상요소)
                            <div> -------------- (기준)
                                <div> --- 자식요소 ------- (자손)
                                    <div>                   ㅣ
                                        <div></div>         ㅣ
                                    </div>                  ㅣ
                                    <div></div>             ㅣ
                                </div>                      ㅣ
                                <div></div> --- 자식요소 -- (자손)
                            </div>
                            <div></div> --- 형제요소
                            <div></div> --- 형제요소
                        </div>

            ** (1) 자식 선택자 (">")

                    기준(부모) 선택자 > 자식 선택자 {
                        ...CSS 문법
                    }

                    ex)
                        // header 태그의 자식 중에 menu-item이라는 클래스를 가진 요소를 선택
                        header > .menu-item{
                            ...
                        }

                        // header 태그의 자식 중에 menu-item이라는 클래스를 가진 요소의
                           자식 요소 중 p태그를 선택
                        header > .menu-item > p {
                            ...
                        }

            ** (2) 자손 선택자 (" ")

                    기준선택자 자손선택자 {
                        ...CSS
                    }

                    ex)
                        // header 태그의 자손(모든 하위 요소) 중 menu_item 클래스를 가진 요소
                        header .menu_item {

                        }

                        // header 태그의 모든 하위 요소 중  menu_item 클래스를 가진 요소의
                           모든 하위 요소 중 p
                        header .menu_item p {

                        }

                => 이어지는 깊이가 깊어질 수록 우선 순위가 높다 
                => class, id값을 남발하는 것을 방지
                => css 선택자로서의 가독성 상승
 -------------------------------------------------------------------------------
    
                mdn사이트 보기
                자식 자손 선택자 실습
                형제 선택자
                가상 클래스 선택자
                가상 요소 선택자
                텍스트 css속성(폰트)
                크기단위(px.em,rem,%)